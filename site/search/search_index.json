{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview Our goal with Munity is to make third part integration easiest as possible. But we don't want to trade simplicity to security . So we are based on strong security standards to keep your customer data safe as Vault, DRF, Kubernetes, TLS and more. To get many connectors out of the box we have Airbyte deep in our architecture, it is closed and nobody can access it from outside . Single interface With your API Key you can fetch your customer data, manage your account, ask user authorization and activate new connectors. Credential management Your customer credentials are stored in Vault and cannot be access without a strong accreditation. We manage this security for you and renew tokens when needed. Connector family To reach simplicity we bring togethere similar API on a single model. Exemple : Project management : Jira, Wrike, Asana, Trello, Clickup.... E-commerce : Shopify, Magento, Prestashop... Integrate once and get similar connectors in second.","title":"Overview"},{"location":"#overview","text":"Our goal with Munity is to make third part integration easiest as possible. But we don't want to trade simplicity to security . So we are based on strong security standards to keep your customer data safe as Vault, DRF, Kubernetes, TLS and more. To get many connectors out of the box we have Airbyte deep in our architecture, it is closed and nobody can access it from outside .","title":"Overview"},{"location":"#single-interface","text":"With your API Key you can fetch your customer data, manage your account, ask user authorization and activate new connectors.","title":"Single interface"},{"location":"#credential-management","text":"Your customer credentials are stored in Vault and cannot be access without a strong accreditation. We manage this security for you and renew tokens when needed.","title":"Credential management"},{"location":"#connector-family","text":"To reach simplicity we bring togethere similar API on a single model.","title":"Connector family"},{"location":"#exemple","text":"Project management : Jira, Wrike, Asana, Trello, Clickup.... E-commerce : Shopify, Magento, Prestashop... Integrate once and get similar connectors in second.","title":"Exemple :"},{"location":"about/","text":"About","title":"About"},{"location":"about/#about","text":"","title":"About"},{"location":"configure/","text":"Configure First, create an account You have to create your workspace and owner at register page Then, choose and configure your first connector Connectors need information to works correctly. There are three different ways to configure connectors. Authenticate by Oauth2 You have to generate a new application on remote service to connect your users through Oauth2. Then your connector need your application client_id and client_secret . Authenticate by API Key You have to generate an API Key on remote service and copy paste it on your connector. Authenticate by User credentials Some remote service need your user/password to provide there data. Finally, get your API Key and certificate For your backend : API Key To fetch your customer data and interact with unified API from your backend your need an API Key. API Key are linked to your user and workspace. If your user has admin privilege it can read and write data. Users with user privilege can only read data. To generate an API Key go to your user admin page . This api key will be used as following on your request on munity unified API : Authorization: X-Api-Key <YOUR-API-KEY> Exemple with CURL : curl -X GET 'https://api.munityapps.com/v1/customers/f87cc67d-b594-4407-a90d-b26cfdae8f14/pm-projects/' -H 'Authorization: X-Api-Key REM0aW39.NfO0123456789CNeHpF29wo' For your frontend : Certificate Certificate is used to communicate from your frontend to Unified API. Indeed frontends are not secured so we have to encrypt exchanges. The single moment when you want to communicate with our API from your front is when you ask for user credentials. Our SDK already provide function to generate this link based on : your internal customer id your workspace id name of the connector wanted In next section we will show you how to generate this link to be sure that you are the initiator of the process.","title":"Configure"},{"location":"configure/#configure","text":"","title":"Configure"},{"location":"configure/#first-create-an-account","text":"You have to create your workspace and owner at register page","title":"First, create an account"},{"location":"configure/#then-choose-and-configure-your-first-connector","text":"Connectors need information to works correctly. There are three different ways to configure connectors.","title":"Then, choose and configure your first connector"},{"location":"configure/#authenticate-by-oauth2","text":"You have to generate a new application on remote service to connect your users through Oauth2. Then your connector need your application client_id and client_secret .","title":"Authenticate by Oauth2"},{"location":"configure/#authenticate-by-api-key","text":"You have to generate an API Key on remote service and copy paste it on your connector.","title":"Authenticate by API Key"},{"location":"configure/#authenticate-by-user-credentials","text":"Some remote service need your user/password to provide there data.","title":"Authenticate by User credentials"},{"location":"configure/#finally-get-your-api-key-and-certificate","text":"","title":"Finally, get your API Key and certificate"},{"location":"configure/#for-your-backend-api-key","text":"To fetch your customer data and interact with unified API from your backend your need an API Key. API Key are linked to your user and workspace. If your user has admin privilege it can read and write data. Users with user privilege can only read data. To generate an API Key go to your user admin page . This api key will be used as following on your request on munity unified API : Authorization: X-Api-Key <YOUR-API-KEY> Exemple with CURL : curl -X GET 'https://api.munityapps.com/v1/customers/f87cc67d-b594-4407-a90d-b26cfdae8f14/pm-projects/' -H 'Authorization: X-Api-Key REM0aW39.NfO0123456789CNeHpF29wo'","title":"For your backend : API Key"},{"location":"configure/#for-your-frontend-certificate","text":"Certificate is used to communicate from your frontend to Unified API. Indeed frontends are not secured so we have to encrypt exchanges. The single moment when you want to communicate with our API from your front is when you ask for user credentials. Our SDK already provide function to generate this link based on : your internal customer id your workspace id name of the connector wanted In next section we will show you how to generate this link to be sure that you are the initiator of the process.","title":"For your frontend : Certificate"},{"location":"howtouse/","text":"How to use Connect customer Since you want you customer data, you need your customer authorization. We take care of the security so you don't have to store these credentials and we also manage the Oauth2 dance for you. The unique endpoint used to provide your customer authorization is https://api.munityapps.com/v1/credentials/jira/register?secret={SECRET} (for JIRA). All you have to do is open in the browser our user manager to get credentials. For exemple, you can create an HTML button with the secret generate as bellow : <button onclick=\"window.open('https://api.munityapps.com/v1/credentials/jira/register?secret={SECRET}','_blank')\"> Connect JIRA </button> Your SECRET is a JWT payload encoded in RS256 using your certificate provided by munity Unified API. For exemple you can get credentials of your customer customer_1234 with this following snippet in python : import jwt # Certificate provided by Munity certificate = \"-----BEGIN PRIVATE KEY-----[...]-----END PRIVATE KEY-----\\n\" SECRET = jwt.encode({\"customer_id\": \"customer_1234\",\"workspace_id\": \"11111111-2222-3333-aaaa-eeeeeeeeeeee\"}, certificate, algorithm=\"RS256\") You can find your certificate in your user admin page . Unified API Endpoints To communicate with API you need an API Key that you can manage on munity unified API website. This api key will be used on the Authorization header: Authorization: X-Api-Key <YOUR-API-KEY> Exemple with CURL : curl -X GET 'https://api.munityapps.com/v1/customers/f87cc67d-b594-4407-a90d-b26cfdae8f14/pm-projects/' -H 'Authorization: X-Api-Key REM0aW39.NfO0123456789CNeHpF29wo' You can access to our swagger to read all endpoint, how to implement it and what format are all responses : Munity Unified API Swagger","title":"How to use"},{"location":"howtouse/#how-to-use","text":"","title":"How to use"},{"location":"howtouse/#connect-customer","text":"Since you want you customer data, you need your customer authorization. We take care of the security so you don't have to store these credentials and we also manage the Oauth2 dance for you. The unique endpoint used to provide your customer authorization is https://api.munityapps.com/v1/credentials/jira/register?secret={SECRET} (for JIRA). All you have to do is open in the browser our user manager to get credentials. For exemple, you can create an HTML button with the secret generate as bellow : <button onclick=\"window.open('https://api.munityapps.com/v1/credentials/jira/register?secret={SECRET}','_blank')\"> Connect JIRA </button> Your SECRET is a JWT payload encoded in RS256 using your certificate provided by munity Unified API. For exemple you can get credentials of your customer customer_1234 with this following snippet in python : import jwt # Certificate provided by Munity certificate = \"-----BEGIN PRIVATE KEY-----[...]-----END PRIVATE KEY-----\\n\" SECRET = jwt.encode({\"customer_id\": \"customer_1234\",\"workspace_id\": \"11111111-2222-3333-aaaa-eeeeeeeeeeee\"}, certificate, algorithm=\"RS256\") You can find your certificate in your user admin page .","title":"Connect customer"},{"location":"howtouse/#unified-api-endpoints","text":"To communicate with API you need an API Key that you can manage on munity unified API website. This api key will be used on the Authorization header: Authorization: X-Api-Key <YOUR-API-KEY> Exemple with CURL : curl -X GET 'https://api.munityapps.com/v1/customers/f87cc67d-b594-4407-a90d-b26cfdae8f14/pm-projects/' -H 'Authorization: X-Api-Key REM0aW39.NfO0123456789CNeHpF29wo' You can access to our swagger to read all endpoint, how to implement it and what format are all responses : Munity Unified API Swagger","title":"Unified API Endpoints"}]}