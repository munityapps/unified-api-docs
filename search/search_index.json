{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview Our goal with Munity is to make third part integration easiest as possible. But we don't want to trade simplicity to security . So we are based on strong security standards to keep your customer data safe as Vault, DRF, Kubernetes, TLS and more. To get many connectors out of the box we have Airbyte deep in our architecture, it is closed and nobody can access it from outside . Single interface With your API Key you can fetch your customer data, manage your account, ask user authorization and activate new connectors. Credential management Your customer credentials are stored in Vault and cannot be access without a strong accreditation. We manage this security for you and renew tokens when needed. Connector family To reach simplicity we bring togethere similar API on a single model. Exemple : Project management : Jira, Wrike, Asana, Trello, Clickup.... E-commerce : Shopify, Magento, Prestashop... Integrate once and get similar connectors in second.","title":"Overview"},{"location":"#overview","text":"Our goal with Munity is to make third part integration easiest as possible. But we don't want to trade simplicity to security . So we are based on strong security standards to keep your customer data safe as Vault, DRF, Kubernetes, TLS and more. To get many connectors out of the box we have Airbyte deep in our architecture, it is closed and nobody can access it from outside .","title":"Overview"},{"location":"#single-interface","text":"With your API Key you can fetch your customer data, manage your account, ask user authorization and activate new connectors.","title":"Single interface"},{"location":"#credential-management","text":"Your customer credentials are stored in Vault and cannot be access without a strong accreditation. We manage this security for you and renew tokens when needed.","title":"Credential management"},{"location":"#connector-family","text":"To reach simplicity we bring togethere similar API on a single model.","title":"Connector family"},{"location":"#exemple","text":"Project management : Jira, Wrike, Asana, Trello, Clickup.... E-commerce : Shopify, Magento, Prestashop... Integrate once and get similar connectors in second.","title":"Exemple :"},{"location":"about/","text":"About Website : https://munityapps.com Discord : https://discord.gg/aY7sBn6wAJ Cyril ALFARO : cyril_at_munityapps.com Marisella PACHECO : marisella_at_munityapps.com Martin Perreau : martin_at_munityapps.com","title":"About"},{"location":"about/#about","text":"Website : https://munityapps.com Discord : https://discord.gg/aY7sBn6wAJ Cyril ALFARO : cyril_at_munityapps.com Marisella PACHECO : marisella_at_munityapps.com Martin Perreau : martin_at_munityapps.com","title":"About"},{"location":"configure/","text":"Configure First, create an account You have to create your workspace and owner at register page Then, choose and configure your first connector Connectors need information to works correctly. There are three different ways to configure connectors. Authenticate by Oauth2 You have to generate a new application on remote service to connect your users through Oauth2. Then your connector need your application client_id and client_secret . Authenticate by API Key You have to generate an API Key on remote service and copy paste it on your connector. Authenticate by User credentials Some remote service need your user/password to provide there data. Finally, get your API Key and certificate For your backend : API Key To fetch your customer data and interact with unified API from your backend your need an API Key. API Key are linked to your user and workspace. If your user has admin privilege it can read and write data. Users with user privilege can only read data. To generate an API Key go to your user admin page . This api key will be used as following on your request on munity unified API : Authorization: X-Api-Key <YOUR-API-KEY> Exemple with CURL : curl -X GET 'https://api.munityapps.com/v1/customers/f87cc67d-b594-4407-a90d-b26cfdae8f14/pm-projects/' -H 'Authorization: X-Api-Key REM0aW39.NfO0123456789CNeHpF29wo' For your frontend : Certificate Certificate is used to communicate from your frontend to Unified API. Indeed frontends are not secured so we have to encrypt exchanges. The only time to communicate with our API from your frontend is when you ask for user credentials. Our frontend librarie will make it easier, you only have to provide your connector type and secret . In next section we will check how to use frontend lib and use it.","title":"Configure"},{"location":"configure/#configure","text":"","title":"Configure"},{"location":"configure/#first-create-an-account","text":"You have to create your workspace and owner at register page","title":"First, create an account"},{"location":"configure/#then-choose-and-configure-your-first-connector","text":"Connectors need information to works correctly. There are three different ways to configure connectors.","title":"Then, choose and configure your first connector"},{"location":"configure/#authenticate-by-oauth2","text":"You have to generate a new application on remote service to connect your users through Oauth2. Then your connector need your application client_id and client_secret .","title":"Authenticate by Oauth2"},{"location":"configure/#authenticate-by-api-key","text":"You have to generate an API Key on remote service and copy paste it on your connector.","title":"Authenticate by API Key"},{"location":"configure/#authenticate-by-user-credentials","text":"Some remote service need your user/password to provide there data.","title":"Authenticate by User credentials"},{"location":"configure/#finally-get-your-api-key-and-certificate","text":"","title":"Finally, get your API Key and certificate"},{"location":"configure/#for-your-backend-api-key","text":"To fetch your customer data and interact with unified API from your backend your need an API Key. API Key are linked to your user and workspace. If your user has admin privilege it can read and write data. Users with user privilege can only read data. To generate an API Key go to your user admin page . This api key will be used as following on your request on munity unified API : Authorization: X-Api-Key <YOUR-API-KEY> Exemple with CURL : curl -X GET 'https://api.munityapps.com/v1/customers/f87cc67d-b594-4407-a90d-b26cfdae8f14/pm-projects/' -H 'Authorization: X-Api-Key REM0aW39.NfO0123456789CNeHpF29wo'","title":"For your backend : API Key"},{"location":"configure/#for-your-frontend-certificate","text":"Certificate is used to communicate from your frontend to Unified API. Indeed frontends are not secured so we have to encrypt exchanges. The only time to communicate with our API from your frontend is when you ask for user credentials. Our frontend librarie will make it easier, you only have to provide your connector type and secret . In next section we will check how to use frontend lib and use it.","title":"For your frontend : Certificate"},{"location":"howtousebackend/","text":"How to use Backend : Interact with your customer data To communicate with API you need an API Key that you can manage on munity unified API website. You can find your api keys in your user admin page . This api key will be used on the Authorization header: Authorization: Api-Key <YOUR-API-KEY> Exemple with CURL : curl -X GET 'https://api.munityapps.com/v1/customers/f87cc67d-b594-4407-a90d-b26cfdae8f14/pm-projects/' -H 'Authorization: Api-Key REM0aW39.NfO0123456789CNeHpF29wo' You can access to our swagger to read all endpoint, how to implement it and what format are all responses : Munity Unified API Swagger","title":"Interact with user data"},{"location":"howtousebackend/#how-to-use-backend-interact-with-your-customer-data","text":"To communicate with API you need an API Key that you can manage on munity unified API website. You can find your api keys in your user admin page . This api key will be used on the Authorization header: Authorization: Api-Key <YOUR-API-KEY> Exemple with CURL : curl -X GET 'https://api.munityapps.com/v1/customers/f87cc67d-b594-4407-a90d-b26cfdae8f14/pm-projects/' -H 'Authorization: Api-Key REM0aW39.NfO0123456789CNeHpF29wo' You can access to our swagger to read all endpoint, how to implement it and what format are all responses : Munity Unified API Swagger","title":"How to use Backend : Interact with your customer data"},{"location":"howtousefrontend/","text":"How to use on frontend : get your customer data access Since you want you customer data, you need that your customer grant access. We take care of the security so you don't have to store these credentials and we also manage the Oauth2 dance for you. Install frontend library npm install @munityapps/frontend Use frontend library to connect users import { connect } from @munityapps/frontend connect('connectorType', secret) connectorType : is a slug referring your connector (ex: jira ). secret : a JWT encoded with RS256 using your certificate provided by Munity. Your cetificate can be find here : admin page . You need to provide workspace_id and customer_id and optionaly the name of the connector in a json format. workspace_id is the ID of your workspace on Munity, you can find it here : admin page . customer_id is your internal id that you will use to find back the customer. It can contains letter and numbers only. (optional) name : a name to show the integration on your frontend for UI purpose. Here a snippet to generate your secret in python: import jwt # Certificate provided by Munity certificate = \"-----BEGIN PRIVATE KEY-----[...]-----END PRIVATE KEY-----\\n\" secret = jwt.encode({\"customer_id\": \"customer_1234\",\"workspace_id\": \"11111111-2222-3333-aaaa-eeeeeeeeeeee\", \"name\": \"optional name\"}, certificate, algorithm=\"RS256\") You can find your certificate in your user admin page .","title":"Get user data access"},{"location":"howtousefrontend/#how-to-use-on-frontend-get-your-customer-data-access","text":"Since you want you customer data, you need that your customer grant access. We take care of the security so you don't have to store these credentials and we also manage the Oauth2 dance for you.","title":"How to use on frontend : get your customer data access"},{"location":"howtousefrontend/#install-frontend-library","text":"npm install @munityapps/frontend","title":"Install frontend library"},{"location":"howtousefrontend/#use-frontend-library-to-connect-users","text":"import { connect } from @munityapps/frontend connect('connectorType', secret) connectorType : is a slug referring your connector (ex: jira ). secret : a JWT encoded with RS256 using your certificate provided by Munity. Your cetificate can be find here : admin page . You need to provide workspace_id and customer_id and optionaly the name of the connector in a json format. workspace_id is the ID of your workspace on Munity, you can find it here : admin page . customer_id is your internal id that you will use to find back the customer. It can contains letter and numbers only. (optional) name : a name to show the integration on your frontend for UI purpose. Here a snippet to generate your secret in python: import jwt # Certificate provided by Munity certificate = \"-----BEGIN PRIVATE KEY-----[...]-----END PRIVATE KEY-----\\n\" secret = jwt.encode({\"customer_id\": \"customer_1234\",\"workspace_id\": \"11111111-2222-3333-aaaa-eeeeeeeeeeee\", \"name\": \"optional name\"}, certificate, algorithm=\"RS256\") You can find your certificate in your user admin page .","title":"Use frontend library to connect users"}]}