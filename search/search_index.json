{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview Our goal with Munity is to make third party integration as smooth as possible. But we don't want to trade simplicity for security . Munity brings: A customizable credential manager to request access to your end-users' data Normalization under common models from data of Airbyte open source connectors A unified API to enable end-users' data within your web application Unified API Our unified API streamlines different APIs into common models for every usecases. It's still possible to get the original data or even to trigger remote API endpoints through our proxy. Munity web application From the Munity web app, you will be able to manage all things concerning the end-user integrations you want to enable. From connectors choice to API keys, we're working to give you the easiest experience towards turning your web application into a versatile platform. Credential management Your customer credentials are stored in Vault and cannot be access without a strong accreditation. We manage this security for you and renew tokens when needed. Integrate once and get similar connectors in second.","title":"Overview"},{"location":"#overview","text":"Our goal with Munity is to make third party integration as smooth as possible. But we don't want to trade simplicity for security . Munity brings: A customizable credential manager to request access to your end-users' data Normalization under common models from data of Airbyte open source connectors A unified API to enable end-users' data within your web application","title":"Overview"},{"location":"#unified-api","text":"Our unified API streamlines different APIs into common models for every usecases. It's still possible to get the original data or even to trigger remote API endpoints through our proxy.","title":"Unified API"},{"location":"#munity-web-application","text":"From the Munity web app, you will be able to manage all things concerning the end-user integrations you want to enable. From connectors choice to API keys, we're working to give you the easiest experience towards turning your web application into a versatile platform.","title":"Munity web application"},{"location":"#credential-management","text":"Your customer credentials are stored in Vault and cannot be access without a strong accreditation. We manage this security for you and renew tokens when needed. Integrate once and get similar connectors in second.","title":"Credential management"},{"location":"about/","text":"About Website : https://munityapps.com Discord : https://discord.gg/aY7sBn6wAJ Cyril ALFARO : cyril_at_munityapps.com Marisella PACHECO : marisella_at_munityapps.com Martin Perreau : martin_at_munityapps.com","title":"About"},{"location":"about/#about","text":"Website : https://munityapps.com Discord : https://discord.gg/aY7sBn6wAJ Cyril ALFARO : cyril_at_munityapps.com Marisella PACHECO : marisella_at_munityapps.com Martin Perreau : martin_at_munityapps.com","title":"About"},{"location":"configure/","text":"Configure First, create an account You have to create your workspace and account on the registration page . Then, choose and configure your first connector Connectors need information to work correctly. There are two different ways to configure connectors. Oauth2 connectors You have to generate a new application on remote service to connect your users through Oauth2. Then your connector needs your application's client_id and client_secret . Authenticate by API Key Your end-user will enter his information in the credential popup. Finally, get your API Key and certificate For your frontend : Certificate The certificate is used to generate a secret allowing secure communication between any frontend and Munity. The only time this secret is needed is for the credential popup. Our frontend SDK will make it easier for you, you only have to provide the connector type and the certificate . This certifcate is generated in security page . For your backend : API Key To get your end-users' data you need a Munity API Key. API Key are linked to your Munity user and Munity workspace. If your Munity user has admin privilege he can read and write all Munity workspace endpoints. Users with user privilege can only read data. To generate an API Key go to your security page . This api key will be used as follow: Authorization: X-Api-Key <YOUR-API-KEY> Example with CURL : curl -X GET 'https://api.munityapps.com/v1/customers/f87cc67d-b594-4407-a90d-b26cfdae8f14/pm-projects/' -H 'Authorization: X-Api-Key REM0aW39.NfO0123456789CNeHpF29wo'","title":"Configure"},{"location":"configure/#configure","text":"","title":"Configure"},{"location":"configure/#first-create-an-account","text":"You have to create your workspace and account on the registration page .","title":"First, create an account"},{"location":"configure/#then-choose-and-configure-your-first-connector","text":"Connectors need information to work correctly. There are two different ways to configure connectors.","title":"Then, choose and configure your first connector"},{"location":"configure/#oauth2-connectors","text":"You have to generate a new application on remote service to connect your users through Oauth2. Then your connector needs your application's client_id and client_secret .","title":"Oauth2 connectors"},{"location":"configure/#authenticate-by-api-key","text":"Your end-user will enter his information in the credential popup.","title":"Authenticate by API Key"},{"location":"configure/#finally-get-your-api-key-and-certificate","text":"","title":"Finally, get your API Key and certificate"},{"location":"configure/#for-your-frontend-certificate","text":"The certificate is used to generate a secret allowing secure communication between any frontend and Munity. The only time this secret is needed is for the credential popup. Our frontend SDK will make it easier for you, you only have to provide the connector type and the certificate . This certifcate is generated in security page .","title":"For your frontend : Certificate"},{"location":"configure/#for-your-backend-api-key","text":"To get your end-users' data you need a Munity API Key. API Key are linked to your Munity user and Munity workspace. If your Munity user has admin privilege he can read and write all Munity workspace endpoints. Users with user privilege can only read data. To generate an API Key go to your security page . This api key will be used as follow: Authorization: X-Api-Key <YOUR-API-KEY> Example with CURL : curl -X GET 'https://api.munityapps.com/v1/customers/f87cc67d-b594-4407-a90d-b26cfdae8f14/pm-projects/' -H 'Authorization: X-Api-Key REM0aW39.NfO0123456789CNeHpF29wo'","title":"For your backend : API Key"},{"location":"faq/","text":"How secure is Munity credential manager? TODO Is Munity GDPR compliant ? TODO How does Munity differ from Airbyte? TODO","title":"Faq"},{"location":"faq/#how-secure-is-munity-credential-manager","text":"TODO","title":"How secure is Munity credential manager?"},{"location":"faq/#is-munity-gdpr-compliant","text":"TODO","title":"Is Munity GDPR compliant ?"},{"location":"faq/#how-does-munity-differ-from-airbyte","text":"TODO","title":"How does Munity differ from Airbyte?"},{"location":"howtousebackend/","text":"How to use Backend : Interact with your customer data To communicate with API you need an API Key that you can manage on munity unified API website. You can find your api keys in your user admin page . This api key will be used on the Authorization header: Authorization: Api-Key <YOUR-API-KEY> Exemple with CURL : curl -X GET 'https://api.munityapps.com/v1/customers/f87cc67d-b594-4407-a90d-b26cfdae8f14/pm-projects/' -H 'Authorization: Api-Key REM0aW39.NfO0123456789CNeHpF29wo' You can access to our swagger to read all endpoint, how to implement it and what format are all responses : Munity Unified API Swagger","title":"Interact with user data"},{"location":"howtousebackend/#how-to-use-backend-interact-with-your-customer-data","text":"To communicate with API you need an API Key that you can manage on munity unified API website. You can find your api keys in your user admin page . This api key will be used on the Authorization header: Authorization: Api-Key <YOUR-API-KEY> Exemple with CURL : curl -X GET 'https://api.munityapps.com/v1/customers/f87cc67d-b594-4407-a90d-b26cfdae8f14/pm-projects/' -H 'Authorization: Api-Key REM0aW39.NfO0123456789CNeHpF29wo' You can access to our swagger to read all endpoint, how to implement it and what format are all responses : Munity Unified API Swagger","title":"How to use Backend : Interact with your customer data"},{"location":"howtousefrontend/","text":"How to use on frontend : get your customer data access Since you want you customer data, you need that your customer grant access. We take care of the security so you don't have to store these credentials and we also manage the Oauth2 dance for you. Install frontend library npm install @munityapps/frontend Use frontend library to connect users import { connect } from @munityapps/frontend connect('connectorType', secret) connectorType : is a slug referring your connector (ex: jira ). secret : a JWT encoded with RS256 using your certificate provided by Munity. Your cetificate can be find here : admin page . You need to provide workspace_id and customer_id and optionaly the name of the connector in a json format. workspace_id is the ID of your workspace on Munity, you can find it here : admin page . customer_id is your internal id that you will use to find back the customer. It can contains letter and numbers only. (optional) name : a name to show the integration on your frontend for UI purpose. (optional) integration_id : is you specify an integration id, we will update instead of create one Here a snippet to generate your secret in python: import jwt # Certificate provided by Munity certificate = \"-----BEGIN PRIVATE KEY-----[...]-----END PRIVATE KEY-----\\n\" secret = jwt.encode({\"customer_id\": \"customer_1234\",\"workspace_id\": \"11111111-2222-3333-aaaa-eeeeeeeeeeee\", \"name\": \"optional name\"}, certificate, algorithm=\"RS256\") You can find your certificate in your user admin page .","title":"Get user data access"},{"location":"howtousefrontend/#how-to-use-on-frontend-get-your-customer-data-access","text":"Since you want you customer data, you need that your customer grant access. We take care of the security so you don't have to store these credentials and we also manage the Oauth2 dance for you.","title":"How to use on frontend : get your customer data access"},{"location":"howtousefrontend/#install-frontend-library","text":"npm install @munityapps/frontend","title":"Install frontend library"},{"location":"howtousefrontend/#use-frontend-library-to-connect-users","text":"import { connect } from @munityapps/frontend connect('connectorType', secret) connectorType : is a slug referring your connector (ex: jira ). secret : a JWT encoded with RS256 using your certificate provided by Munity. Your cetificate can be find here : admin page . You need to provide workspace_id and customer_id and optionaly the name of the connector in a json format. workspace_id is the ID of your workspace on Munity, you can find it here : admin page . customer_id is your internal id that you will use to find back the customer. It can contains letter and numbers only. (optional) name : a name to show the integration on your frontend for UI purpose. (optional) integration_id : is you specify an integration id, we will update instead of create one Here a snippet to generate your secret in python: import jwt # Certificate provided by Munity certificate = \"-----BEGIN PRIVATE KEY-----[...]-----END PRIVATE KEY-----\\n\" secret = jwt.encode({\"customer_id\": \"customer_1234\",\"workspace_id\": \"11111111-2222-3333-aaaa-eeeeeeeeeeee\", \"name\": \"optional name\"}, certificate, algorithm=\"RS256\") You can find your certificate in your user admin page .","title":"Use frontend library to connect users"}]}